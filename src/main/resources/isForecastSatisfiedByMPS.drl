/*
	hard constraints,
	If multiple BOM use the same SKU, total demand qty should less or equal to total supplied qty
	if multiple SKUs in one alternative product group, total demand qty of these SKUs should be equal to product group's demand qty  
*/
declare GroupDemand
    group : HyveProductGroup @position(0)
    planQty : int @position(1)
    planDate : Date @position(2)
    planLoc : int @position(3)
end

declare SkuDemand
	skuNo: int @position(0)
    planQty : int @position(1)
    planDate : Date @position(2)
    planLoc : int @position(3)
    parentGroup : HyveProductGroup @position(4)
end

rule "MPS Entry found, find its production group and BOM qty" 
when
	$mpsEntry:MPSEntry($groupID:custBOM, $planQty:planQty, $planDate:planDate, $planLoc:planLocation)
	$group:HyveProductGroup(groupID = $groupID, groupType = GroupType.ASSEMBLY)
then
	insert(new GroupDemand($group, $planQty, $planDate, $planLoc))	
end

rule "Explode assembly group demand"
when 
	$groupDemand: GroupDemand($group:group, $planQty:planQty, 
								$planDate:planDate, $planLoc:planLoc, 
								groupType = GroupType.ASSEMBLY);
	$groupMember: HyveProductGroupMember from 
	$group.groupDetails(memberType = MemberType.SUB_GROUP, $bomQty:minBOMQty);
	$subGroup: HyveProductGroup(groupID = $groupMember.subGroupID);
	not exists(GroupDemand(group = subGroup));
	$x: float = getRatio($subGroup);
then
	$planDate = minusTwoWeek($planDate)
	insert(new GroupDemand($subGroup, $x * $planQty * bomQty, $planDate, $planLoc))	
end

rule "Explode alternative group sub group member demand"
when 
	$groupDemand: GroupDemand($group:group, $planQty:planQty, 
								$planDate:planDate, $planLoc:planLoc, 
								groupType = GroupType.ALTERNATIVE);
	$groupMember: HyveProductGroupMember from 
		$group.groupDetails(memberType = MemberType.SUB_GROUP);
	$subGroup: HyveProductGroup(groupID = $groupMember.subGroupID);
	not exists(GroupDemand(group = subGroup));
then
	insert(new GroupDemand($subGroup, $planQty, $planDate, $planLoc))	
end

rule "Explode alternative group sku member demand"
when 
	$groupDemand: GroupDemand($group:group, $planQty:planQty, 
								$planDate:planDate, $planLoc:planLoc, 
								groupType = GroupType.ALTERNATIVE);
	$groupMember: HyveProductGroupMember from 
		$group.groupDetails(memberType = MemberType.MATERIAL, $skuNo:skuNo);
	not exists(SkuDemand(skuNo = $skuNo, parentGroup = $group));
then
	insert(new SkuDemand($skuNo, $planQty, $planDate, $planLoc, $group))	
end

